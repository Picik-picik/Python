Python 3.8.1 (tags/v3.8.1:1b293b6, Dec 18 2019, 22:39:24) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> # 02-7 이름 달기 규칙 그리고 대소문자 구분
>>> 
>>> # 변수나 함수의 이름을 짓는 데 있어서 다음 세 가지의 제약이 존재한다.
>>> # - 파이썬은 대소문자를 구분한다.
>>> # - 숫자로 시작하면 안 된다.
>>> # - 키워드는 이름으로 쓸 수 없다.
>>> 
>>> # 즉 다음 예에서 보이듯이 num과 Num은 서로 다른 변수이다.
>>> num = 0
>>> Num = 10
>>> print(num, Num)
0 10
>>> # 변수 num과 Num을 나란히 출력
>>> 
>>> # 그리고 다음과 같이 숫자로 시작하는 이름은 허용이 안된다.
>>> 2num = 0
SyntaxError: invalid syntax
>>> 
>>> # 그리고 앞서 우리가 함수를 만들 때 사용했던 def, 값을 반환할 때 사용했던 return,
>>> # 이렇게 용도가 정해져 있는 단어들을 가리켜 '키워드(keyword)'라 하는데 이러한 키워드를 이용해서
>>> # 변수나 함수의 이름을 짓는 것도 안된다.
>>> return = 2
SyntaxError: invalid syntax
>>> 
>>> # 더불어 변수나 함수의 이름을 짓는 파이썬의 관례가 있어 이를 소개하고자 한다.
>>> # 기억해야 할 관례, 그리고 가급적 지켜야 할 관례 둘은 다음과 같다.
>>> 
>>> # "변수와 함수의 이름은 소문자로 시작한다."
>>> # "둘 이상의 단어를 연결하는 경우 언더바 _를 이용해서 연결한다."
>>> 
>>> # 예를 들어서 '나의 이름'이라는 의미의 변수를 선언하기 위해서 my라는 단어와 name이라는 단어를
>>> # 묶을 때, 이 둘을 다음과 같이 언더바 _로 연결하고 각 단어는 소문자로 시작하면 이는 좋은 예이다.
>>> 
>>> # 좋은 예 	my_name
>>> 
>>> # 반면 다음과 같이 대문자로 시작하거나, 두 단어를 그냥 연결하는 것은 좋지 않은 예이므로 피해야 한다.
>>> 
>>> # 좋지 않은 예 myname, MyName, My_Name
>>> 
>>> # 물론 위와 같이 이름을 짓는다고 해서 오류가 발생하는 것은 아니다. 그러나 이러한 규칙을 지키면 이후에,
>>> # 한참 뒤에 공부하게 될 클래스라는 것과의 이름 혼동을 피할 수 있다.
>>> # 즉 이름만 봐도 이것이 클래스의 이름인지, 아니면 변수나 함수의 이름인지 구분할 수 있다.
>>> 