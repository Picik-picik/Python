Python 3.8.1 (tags/v3.8.1:1b293b6, Dec 18 2019, 22:39:24) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> # 05-6 리스트에서 두 칸씩 뛰면서 저장된 값들 꺼내기
>>> 
>>> # 이제 슬라이싱 연산과 관련된 마지막 설명이다. 일단 다음과 같이 선언된 리스트가 있다고 가정해보자.
>>> 
>>> #	st1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
>>> 
>>> # 이 리스트를 대상으로 인덱스 값이 0 ~ 8인 위치의 값들만 뽑아내려면 다음과 같이 하면 된다.
>>> # (이는 이미 설명한 내용이다.)
>>> 
>>> st1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
>>> st2 = st1[0 : 9]	# st1[0] ~ st1[8]까지
>>> st2
[1, 2, 3, 4, 5, 6, 7, 8, 9]
>>> 
>>> # 인덱스 값이 0 ~ 8인 위치의 값들 중에서 두 칸씩 뛰면서 값을 뽑아내려면, 다음과 같이 하면 된다.
>>> 
>>> st1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
>>> st2 = st1[0 : 9 : 2]	# st1[0] ~ st1[8]까지 2칸씩 뛰면서
>>> st2
[1, 3, 5, 7, 9]
>>> 
>>> # 물론 세 칸씩 뛰면서 값을 뽑아내려면 위의 예에서 2를 3으로만 바꾸면 된다. 다음과 같이 말이다.
>>> 
>>> st1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
>>> st2 = st1[0 : 9 : 3]	# st1[0] ~ st1[8]까지 3칸씩 뛰면서
>>> st2
[1, 4, 7]
>>> 
>>> # [연습문제 05-2]
>>> 
>>> # 문제 1
>>> st = [1, 2, 3, 4, 5]
>>> st[1 : 4] = [3]
>>> st
[1, 3, 5]
>>> 
>>> # 문제 2
>>> st = [1, 2, 3, 4, 5]
>>> st[2] = [3, 3.5]
>>> st
[1, 2, [3, 3.5], 4, 5]
>>> st = [1, 2, 3, 4, 5]
>>> st[2 : 3] = [3, 3.5]
>>> st
[1, 2, 3, 3.5, 4, 5]
>>> 
>>> # 문제 32
>>> # 문제 3
>>> st = [1, 2, 3, 4, 5]
>>> st[1 : 4] = []
>>> st
[1, 5]
>>> 
>>> # 문제 4
>>> st = [1, 2, 3, 4, 5]
>>> st[ : ] = []
>>> st
[]
>>> 
>>> # 문제 5
>>> st = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>>> nt = st[1 : : 2]
>>> nt
[2, 4, 6, 8, 10]
>>> nt = st[0 : : 2]
>>> nt
[1, 3, 5, 7, 9]
>>> 
>>> # 문제 6
>>> st = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>>> nt = st[1 : : 2]
>>> ㅜㅅ
Traceback (most recent call last):
  File "<pyshell#61>", line 1, in <module>
    ㅜㅅ
NameError: name 'ᅮᄉ' is not defined
>>> nt
[2, 4, 6, 8, 10]
>>> 