Python 3.8.1 (tags/v3.8.1:1b293b6, Dec 18 2019, 22:39:24) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> # Chapter 04. int형 데이터와 float형 데이터
>>> # 04-1 정수의 표현과 실수의 표현
>>> 
>>> # 우리가 다음과 같이 변수를 선언하고 값을 저장하면, 파이썬은 그 값을 컴퓨터의 메모리에 저장한다.
>>> 
>>> data1 = 2 	# 정수 2를 변수 data1에 저장
>>> data2 = 2.4	# 실수 2.4를 변수 data2에 저장
>>> 
>>> # 그런데 파이썬이 정수 2를 저장하는 방식과 실수 2.4를 저장하는 방식에는 차이가 있다.
>>> # 우리가 볼 때는 둘 다 수이지만 파이썬 입장에서는 이 둘의 성격이 다르기 때문이다.
>>> # 예를 들어서 파이썬에게 다음과 같이 명령했다고 가정해보자.
>>> 
>>> # "2 이상 5 이하의 모든 정수를 저장해!"
>>> 
>>> # 그러면 파이썬은 기쁜 마음으로 2, 3, 4, 5를 저장한다. 그런데 다음과 같이 명령한다면?
>>> 
>>> # "2.1 이상 2.2 이하의 모든 실수를 저장해!"
>>> 
>>> # 이 명령은 파이썬 입장에서 수행하지 못하는 명령이다.
>>> # 왜냐하면 2.1 ~ 2.2 사이에 존재하는 실수의 수는 무한대이기 때문이다.
>>> 
>>> # "2.101도 있고, 2.1001도 있고, 2.100001도 있고 끝이 없네."
>>> 
>>> # 사실 사람들도 다음과 같은 명령은 수행할 수 없다."
>>> 
>>> # 사실 사람들도 다음과 같은 명령은 수행할 수 없다.
>>> 
>>> # "2.1 이상 2.2 이하의 모든 실수를 종이에다 한번 적어 보시죠."
>>> # "원하시면 종이는 얼마든지 드리겠습니다."
>>> 
>>> # 때문에 파이썬은 실수를 정수만큼 잘 표현하지 못한다.
>>> # (두 실수 사이에 존재하는 실수의 수가 무한대라는 특성 때문에)
>>> # 예를 들어서 다음과 같이 정수를 저장하면 변수에는 정확히 2라는 값이 저장된다.
>>> # 오차가 있지 않은 2가 저장된다.
>>> 
>>> num = 2
>>> print(num)
2
>>> 
>>> # 그러나 다음과 같이 실수를 저장하면, 변수에는 정확히 1.000000000000001라는 값이 저장되지 않고
>>> # 오차가 있는 값이 저장된다. (물론 오차를 최대한 줄이려는 노력은 이뤄진다.)
>>> 
>>> num = 1.000000000000001
>>> print(num)
1.000000000000001
>>> 
>>> # 그런데 위의 예를 보면서 다음과 같이 물을 수 있다.
>>> 
>>> # "출력 결과를 보니까 저장한 값이 잘 출력 되었는데요? 오차 없는데요?"
>>> 
>>> # 오차가 너무 작아서 눈에 보이지 않을 뿐이다. 다음의 예처럼 오차끼리 더해져서 그 값이 커지면
>>> # 오차도 눈에 보인다.
>>> 
>>> num1 = 1.000000000000001
>>> num2 = 1.1
>>> print(num1 + num2)
2.1000000000000014
>>> 
>>> # 위의 예에서 num2에 저장된 값은 정확히 1.1이 아니다.
>>> # 1.1에 가까운 값일 뿐이다.
>>> # 그래서 num1에 존재하는 오차와 num2에 존재하는 오차가 더해져서 오차의 존재가 눈에 드러났다.
>>> # 설명이 조금 길었는데 다음과 같이 정리하고 넘어가면 좋겠다.
>>> 
>>> # * 파이썬이 '정수를 표현 및 저장하는 방법'과 '실수를 표현 및 저장하는 방법'은 다르다.
>>> # * 파이썬은 정수를 아주 정확히 표현하고 저장할 수 있다.
>>> # * 파이썬은 실수를 오차 없이 표현하고 저장하지 못한다. 실수에는 약간의 오차가 있다.
>>> 
>>> # 아! 그리고 이러한 실수의 표현 및 저장의 한계는 파이썬의 능력 부족이 아니라 컴퓨터가 갖는 한계이니
>>> # (달리 생각하면 실수의 특성 때문에 그런 것이니) 오해하지 말자.
>>> # 다른 코딩 언어들도 마찬가지이니 말이다.
>>> 